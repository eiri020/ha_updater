#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
DIR_RELATIVE=$(dirname ${BASH_SOURCE[0]})
script=$(basename "${BASH_SOURCE[0]}")

if [ -z "$DIR" ]
then
  DIR=.
  DIR_RELATIVE=.
fi

ha_config=""

while getopts "snc:" o; do
    case "${o}" in
        n)
            notify=1
            ;;
        c)
            ha_config=${OPTARG}
            ;;
        s)
            silent=1
            ;;
        x)
            full=1
            ;;
    esac
done
shift $((OPTIND-1))


if [ -z "$ha_config" ] 
then
  if [ -f ./.ha_config ]
  then
    ha_config=./.ha_config
  elif [ -f "$DIR/.ha_config" ]
  then
    ha_config="$DIR/.ha_config"
  else 
    ha_config="~/ha_config"
  fi 
fi

[ -z "$silent"] && echo "$script: Reading parameters from $ha_config"
. "$ha_config"
if [ $? -ne 0 ]
then
  >&2 echo "$script: ERROR .ha_config not loaded, should be in either ., executable path, or homedir" 
  exit 1
fi


exit_notification() {

  if [ ! -z "$notify" ]
  then
    $DIR/notify -m "$1" -t "$script ($(hostname)/$branch)" -c "$ha_config"
  fi

  >&2 echo  "$script ($(hostname)/$branch): Validation failed: $1"
  exit 1
}


add_remote_parameters() {

  local args=""

  [ ! -z "$full" ] && args="$args -x "
  [ ! -z "$force" ] && args="$args -f "
  [ ! -z "$notify" ] && args="$args -n "
  [ ! -z "$silent" ] && args="$args -s "

  echo "$args"
}

if [ ! -z full ]
then
  [ -z "$silent" ] && echo "HA: Restarting with docker compose"  

  if [ ! -f "$ha_homedir/.HA_VERSION" ]
  then
    [ -z "$silent" ] && echo "$script ($(hostname)/$branch): .HA_VERSION not found, assuming develop computer, now calling script on server"  
    ssh $ha_user@$ha_host "cd $ha_homedir ; $DIR_RELATIVE/$script $(add_remote_parameters)"
    if [ $? -ne 0 ] 
    then
      [ -z "$silent" ] && echo "$script ($(hostname)/$branch): Error restarting homeassistant service"  
      exit 1
    fi
  else
    docker-compose restart
  fi
else
  [ -z "$silent" ] && echo "HA: Restarting with API"  

  RESTART_RESULT=$(curl -s --request POST \
    --url "$ha_http_protocol://$ha_host:$ha_http_port/api/services/homeassistant/restart" \
    --header "Authorization: Bearer $ha_api_token" \
    --header 'Content-Type: application/json')
  if [ "$?" -ne 0 ] 
  then
    exit_notification "Error calling HA restart API. abort"
  fi
fi

[ -z "$silent" ] && echo "HA: Done"  
